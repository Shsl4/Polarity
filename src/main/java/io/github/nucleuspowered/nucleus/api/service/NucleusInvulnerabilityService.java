/*
 * This file is part of Nucleus, licensed under the MIT License (MIT). See the LICENSE.txt file
 * at the root of this project for more details.
 */
package io.github.nucleuspowered.nucleus.api.service;

import io.github.nucleuspowered.nucleus.api.exceptions.NucleusException;
import org.spongepowered.api.entity.living.player.User;
import org.spongepowered.api.util.annotation.NonnullByDefault;

/**
 * A service that handles Nucleus invulnerability
 */
@NonnullByDefault
public interface NucleusInvulnerabilityService {

    /**
     * The permission context key that indicates a player is invulnerable.
     *
     * <p>The value of this context will always be true if set.</p>
     */
    String INVULNERABLE_CONTEXT = "nucleus-invulnerable";

    /**
     * Returns whether a player is invulnerable as far as Nucleus is concerned.
     *
     * @param user The user
     * @return {@code true} if so
     */
    boolean isInvulnerable(User user);

    /**
     * Sets whether a player is invulnerable as far as Nucleus is concerned.
     *
     * @param user The user
     * @param invulnerable {@code true} if so
     * @throws NucleusException thrown if the Nucleus user data file could not be opened/saved.
     */
    void setInvulnerable(User user, boolean invulnerable) throws NucleusException;

}
